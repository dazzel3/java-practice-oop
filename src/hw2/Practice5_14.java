package hw2;

interface Shape {

	final double PI = 3.14;
	void draw(); // 도형을 그리는 추상 메소드
	double getArea(); // 도형의 면적을 리턴하는 추상 메소드
	
	default public void redraw() { // 디폴트 메소드
		System.out.print("--- 다시 그립니다. ");
		draw();	
	}
}

class Circle implements Shape {
	
	   private int r;
	   
	   //생성자
	   public Circle(int r) {
	      this.r = r;
	   }
	   
	   //인터페이스 도형 그리는 추상메소드 정의
	   public void draw() {
	      System.out.println("반지름이 "+r+"인 원입니다.");
	   }
	   
	   //인터페이스 도형 면적 구하는 추상메소드 정의
	   public double getArea() {
	      return PI*r*r;
	   }
}

class Oval implements Shape {
	
	private int r1, r2;
	
	//생성자
	public Oval(int r1, int r2) {
		this.r1  = r1;
      	this.r2 = r2;
	}
	
	//인터페이스 도형 그리는 추상메소드 정의
	public void draw() {
		System.out.println(r1+"x"+r2+"에 내접하는 타원입니다.");
	}
	
	//인터페이스 도형 면적 구하는 추상메소드 정의
	public double getArea() {
		return PI*r1*r2;
	}
}

class Rect implements Shape {
	
	private int x, y;
	
	//생성자
	public Rect(int x, int y) {
		this.x  = x;
		this.y = y;
	}
	
	//인터페이스 도형 그리는 추상메소드 정의
	public void draw() {
		System.out.println(x+"x"+y+"크기의 사각형 입니다.");
	}
	
	//인터페이스 도형 면적 구하는 추상메소드 정의
	public double getArea() {
		return x*y;
	}
}

public class Practice5_14 {

	public static void main(String[] args) {
		
		Shape [] list = new Shape[3]; // Shape을 상속받은 클래스 객체의 레퍼런스 배열

		list[0] = new Circle(10); // 반지름이 10인 원 객체
		list[1] = new Oval(20, 30); // 20x30 사각형에 내접하는 타원
		list[2] = new Rect(10, 40); // 10x40 크기의 사각형


		for(int i=0; i<list.length; i++)
			list[i].redraw();

		for(int i=0; i<list.length; i++)
			System.out.println("면적은 " + list[i].getArea());

	}

}
